---
title: Configuring Database Monitoring
owner: Partners
---

This document describes how to configure a database agent (DB agent) and see database  metrics on the AppDynamics controller.

## <a id="snapshot"></a>Feature Snapshot

 - AppDynamics supports database monitoring in v1.1.1 and later
 - If your AppDynamics controller has license for Database monitoring, you can monitor databases in PCF
 - Supported DB agent **v4.1.8.0, v4.1.10.0**
 - Supported databases: 
  ![DBSupport](../images/DBSupport.png)
 - The DB agent is compatible with controller v4.1.8.0 and above OR v4.1.10.0 and above if using agent v4.1.8.0 or v
Max Hufnagel [2:46 PM]  
We strongly discourage the use of periods in a URL string. Periods in URL strings can cause many bits of analytics, tracking, and sharing things to break. For example, some Twitter clients will break the URL at the period. This frustrates humans and negatively impacts SEO.4.1.10.0 respectively.

## <a id="agent"></a>Step 1: Configure Tile for Database Agent

1. You can configure any service plan to deploy DB agents. To configure a DB agent:
  1. Select the **Enable Database Monitoring** checkbox. 
  1. Specify a supported DB agent version. This tile supports DB Agent v4.1.8.0 and v4.1.10.0. 
  1. Specify the number of DB agents to deploy for the service plan.
  1. Click **Save**.  
    ![DB Config For Tile GUI](../images/DB1.png)
  
1. After the tile installs, you can verify that each DBAgent runs as a CF application within the `AppDynamics-DB-Visibility` org. The name of each DBAgent application is `DBAgent-SERVICE_PLAN_NAME-INDEX`. See the following example:
      <pre class="terminal">
      $ cf target -o AppDynamics-DB-Visibility 
      $ cf apps 
      Getting apps in org AppDynamics-DB-Visibility / space AppDynamics-DB-Visibility-space as admin... 
      OK 
      name     requested      state      instances    memory         disk     urls 
      DBAgent-svcplan-1    started     1/1     1G     1G 
      DBAgent-svcplan-2    started     1/1     1G     1G</pre>
      Here, `svcplan` is the name of the service plan configured to deploy two DB agents. 

## <a id="collector"></a>Step 2: Configure Database Collector

The Database Agent and the AppDynamics Controller work together to monitor a database. The agent collects the data from the database server and passes it to the AppDynamics Controller for interpretation and display in the Controller UI. The Database Agent does not need to be installed on the same system hosting the database server.

<p class="note"><strong>Note</strong>: Because each DB agent starts with 1G of memory, AppDynamics reccommends configuring at most two DB collectors for each DBAgent app running in Pivotal Cloud Foundry (PCF).</p>

1. Open the Appdynamics controller and go to **Databases > Configuration > Collectors**.
  ![Database collector](../images/Database2.png) 

1. Configure a database collector using the [Configure Database Collectors](https://docs.appdynamics.com/display/PRO41/Configure+Database+Collectors) topic from the AppDynamics docs.
  - For the **Database Agent** field in every collector, select the DB agent name deployed in PCF. In the example image below, you choose **DBAgent-PCF-Public-Controller-1** as the **Database Agent** and not **Default DB Agent**
    ![CollectorConfig](../images/Database3.png) 
1. Once you configure and save the collector, generate some traffic on
   an application that includes database operations. After a couple
   of minutes, you can see database traffic on your
   AppDynamics Database Dashboard.
![DatabaseTraffic](../images/Database4.png)
